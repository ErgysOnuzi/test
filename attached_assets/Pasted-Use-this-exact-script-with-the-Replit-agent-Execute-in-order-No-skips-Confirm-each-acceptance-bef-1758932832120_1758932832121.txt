Use this exact script with the Replit agent. Execute in order. No skips. Confirm each acceptance before moving on.

# 0) Kill the build blocker: `<Html>` imported outside `pages/_document`

**Goal:** Remove any `Html/Head/Main/NextScript` imports/usages from **everywhere except** `pages/_document.tsx` (App Router uses `app/layout.tsx`—do not use `<Html>` there).

**Commands**

```bash
# Find offenders
rg -n "from 'next/document'|<Html|<Head>|<Main>|<NextScript>" src || true
```

**Fix**

* In every file matched under `src/app/**` or `src/components/**`:

  * Delete `import { Html, Head, Main, NextScript } from 'next/document'`.
  * Replace any `<Html>`…`</Html>` wrappers with normal JSX (usually remove wrapper and keep inner content).
* Ensure 404 page is App Router style:

  * **File:** `src/app/not-found.tsx`
  * **Content:** no `Html` import; plain component.

**Acceptance**

* `rg` returns **no** matches for the pattern in `src/` (except possibly `src/pages/_document.tsx` if it exists).
* `npm run build` no longer fails with “Html should not be imported outside of pages/_document”.

---

# 1) App Router 404 page

**Goal:** Replace any `404.tsx` with App Router `not-found.tsx`.

**Actions**

* Delete `src/app/404.tsx` if present.
* Create `src/app/not-found.tsx`:

```tsx
import Link from 'next/link';
import { Home } from 'lucide-react';

export default function NotFound() {
  return (
    <main className="min-h-screen flex items-center justify-center px-6 bg-background text-foreground">
      <div className="text-center max-w-md mx-auto">
        <h1 className="text-8xl font-serif font-bold text-primary mb-4">404</h1>
        <h2 className="text-3xl font-serif font-semibold mb-4">Seite nicht gefunden</h2>
        <p className="text-muted-foreground text-lg leading-relaxed mb-8">
          Die Seite, die Sie suchen, existiert nicht oder wurde verschoben.
        </p>
        <Link
          href="/de"
          className="inline-flex items-center gap-2 bg-primary text-primary-foreground px-6 py-3 rounded-lg hover:bg-primary/90 transition-colors font-medium"
        >
          <Home className="w-4 h-4" />
          Zur Startseite
        </Link>
      </div>
    </main>
  );
}
```

**Acceptance**

* Build does not error on `/404` prerender.

---

# 2) Fix non-standard `NODE_ENV`

**Goal:** Let Next set `NODE_ENV` itself.

**Actions**

* Replit → Secrets/Environment: remove `NODE_ENV` entirely (or set to exactly `production`).
* `package.json` scripts must not set custom `NODE_ENV`.

**Acceptance**

* `npm run build` shows no “non-standard NODE_ENV” warning.

---

# 3) Fonts warning in App Router

**Goal:** Stop using `<link href="https://fonts.googleapis.com/...">` in `layout.tsx`. Use `next/font`.

**Actions**

* Remove font `<link>` tags from `src/app/layout.tsx`.
* Implement:

```tsx
// src/app/layout.tsx
import './globals.css';
import { Inter } from 'next/font/google';
const inter = Inter({ subsets: ['latin'], display: 'swap' });

export const metadata = { title: '...', description: '...' };

export default function RootLayout({ children }: { children: React.ReactNode }) {
  return (
    <html lang="de">
      <body className={inter.className}>{children}</body>
    </html>
  );
}
```

**Acceptance**

* Build no longer reports `@next/next/no-page-custom-font`.

---

# 4) ESLint warnings that affect stability

**a) `useEffect` missing deps**

* Files:

  * `src/app/[locale]/admin/events/page.tsx` → include `[t]` or disable once.
  * `src/app/[locale]/admin/gallery/page.tsx` → include `[t]` or disable once.
  * `src/app/[locale]/admin/reservations/page.tsx` → include `[t]` or disable once.
  * `src/app/[locale]/admin/menu/MenuCRUD.tsx` → wrap `fetchItems` in `useCallback` and add to deps.

**Patterns**

```ts
// i18n 't' case (stable but lint complains):
// eslint-disable-next-line react-hooks/exhaustive-deps
useEffect(() => { /* ... */ }, []);

// or include it explicitly if safe:
useEffect(() => { /* ... */ }, [t]);

// fetchItems case:
const fetchItems = useCallback(async () => { /* ... */ }, [/* deps used inside */]);
useEffect(() => { fetchItems(); }, [fetchItems]);
```

**b) `no-console`**

* Remove logs or guard:

```ts
if (process.env.NEXT_PUBLIC_DEBUG === '1') console.log('...');
```

* For API routes, prefer a lightweight logger or remove.

**c) `jsx-a11y/alt-text`**

* At `src/app/[locale]/admin/page.tsx:192`, add `alt` to `<img>`/`<Image>`.

**Acceptance**

* `npm run build` shows at most benign warnings; no lints that can break CI later.

---

# 5) Ensure Next 15.5.4 alignment and clean scripts

**Goal:** Use consistent versions and sane scripts.

**Actions**

* `package.json`:

  * Set `"next": "15.5.4"`.
  * Keep:

    ```json
    "scripts": {
      "dev": "next dev --port 5000 --hostname 0.0.0.0",
      "build": "next build",
      "start": "next start -p $PORT --hostname 0.0.0.0",
      "postinstall": "next --version",
      "db:migrate": "drizzle-kit migrate",
      "db:push": "drizzle-kit push"
    }
    ```
* Remove unused Vite-specific devDependencies if present (`vite`, `@vitejs/plugin-react`, `@replit/vite-plugin-*`, `esbuild`, `tsx`).

**Acceptance**

* Install is faster; fewer dev deps; no Vite in the tree unless actually used.

---

# 6) Rebuild and run

**Commands**

```bash
rm -rf .next
npm ci
npm run build
npm run start
```

**Acceptance**

* Build finishes without `<Html>` error and without the `NODE_ENV` warning.
* Hitting a non-existent route renders the styled `not-found` page.
* Browser console on `/de` shows no red errors.

---

# 7) Post-merge guardrails (optional but recommended)

* Add CI step to prevent regressions:

  * Fail build if `rg -n "from 'next/document'|<Html|<Head>|<Main>|<NextScript>" src` returns matches.
  * Lint rule: `"@next/next/no-document-import-in-page": "error"`.

**Acceptance**

* Future PRs cannot reintroduce the `<Html>` import violation.

Apply all steps above now.
